/*
 * This file is generated by jOOQ.
 */
package org.jease.entity.tables;


import org.jease.entity.Indexes;
import org.jease.entity.Jease;
import org.jease.entity.Keys;
import org.jease.entity.tables.records.LinkcheckRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Linkcheck extends TableImpl<LinkcheckRecord> {

    private static final long serialVersionUID = -800323982;

    /**
     * The reference instance of <code>jease.linkcheck</code>
     */
    public static final Linkcheck LINKCHECK = new Linkcheck();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LinkcheckRecord> getRecordType() {
        return LinkcheckRecord.class;
    }

    /**
     * The column <code>jease.linkcheck.id</code>.
     */
    public final TableField<LinkcheckRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jease.linkcheck.path</code>.
     */
    public final TableField<LinkcheckRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>jease.linkcheck.url</code>.
     */
    public final TableField<LinkcheckRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>jease.linkcheck.status</code>.
     */
    public final TableField<LinkcheckRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>jease.linkcheck</code> table reference
     */
    public Linkcheck() {
        this(DSL.name("linkcheck"), null);
    }

    /**
     * Create an aliased <code>jease.linkcheck</code> table reference
     */
    public Linkcheck(String alias) {
        this(DSL.name(alias), LINKCHECK);
    }

    /**
     * Create an aliased <code>jease.linkcheck</code> table reference
     */
    public Linkcheck(Name alias) {
        this(alias, LINKCHECK);
    }

    private Linkcheck(Name alias, Table<LinkcheckRecord> aliased) {
        this(alias, aliased, null);
    }

    private Linkcheck(Name alias, Table<LinkcheckRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Linkcheck(Table<O> child, ForeignKey<O, LinkcheckRecord> key) {
        super(child, key, LINKCHECK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jease.JEASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.LINKCHECK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<LinkcheckRecord, Integer> getIdentity() {
        return Keys.IDENTITY_LINKCHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LinkcheckRecord> getPrimaryKey() {
        return Keys.KEY_LINKCHECK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LinkcheckRecord>> getKeys() {
        return Arrays.<UniqueKey<LinkcheckRecord>>asList(Keys.KEY_LINKCHECK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Linkcheck as(String alias) {
        return new Linkcheck(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Linkcheck as(Name alias) {
        return new Linkcheck(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Linkcheck rename(String name) {
        return new Linkcheck(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Linkcheck rename(Name name) {
        return new Linkcheck(name, null);
    }
}
