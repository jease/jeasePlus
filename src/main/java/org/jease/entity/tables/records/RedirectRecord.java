/*
 * This file is generated by jOOQ.
 */
package org.jease.entity.tables.records;


import org.jease.entity.tables.Redirect;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.sql.Date;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RedirectRecord extends UpdatableRecordImpl<RedirectRecord> implements Record5<Integer, String, String, Date, String> {

    private static final long serialVersionUID = -2130842682;

    /**
     * Setter for <code>jease.redirect.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jease.redirect.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jease.redirect.source</code>.
     */
    public void setSource(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jease.redirect.source</code>.
     */
    public String getSource() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jease.redirect.target</code>.
     */
    public void setTarget(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jease.redirect.target</code>.
     */
    public String getTarget() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jease.redirect.timestamp</code>.
     */
    public void setTimestamp(Date value) {
        set(3, value);
    }

    /**
     * Getter for <code>jease.redirect.timestamp</code>.
     */
    public Date getTimestamp() {
        return (Date) get(3);
    }

    /**
     * Setter for <code>jease.redirect.pattern</code>.
     */
    public void setPattern(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>jease.redirect.pattern</code>.
     */
    public String getPattern() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Date, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, String, String, Date, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Redirect.REDIRECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Redirect.REDIRECT.SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Redirect.REDIRECT.TARGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field4() {
        return Redirect.REDIRECT.TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Redirect.REDIRECT.PATTERN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getTarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component4() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTarget();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value4() {
        return getTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getPattern();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord value2(String value) {
        setSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord value3(String value) {
        setTarget(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord value4(Date value) {
        setTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord value5(String value) {
        setPattern(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RedirectRecord values(Integer value1, String value2, String value3, Date value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RedirectRecord
     */
    public RedirectRecord() {
        super(Redirect.REDIRECT);
    }

    /**
     * Create a detached, initialised RedirectRecord
     */
    public RedirectRecord(Integer id, String source, String target, Date timestamp, String pattern) {
        super(Redirect.REDIRECT);

        set(0, id);
        set(1, source);
        set(2, target);
        set(3, timestamp);
        set(4, pattern);
    }
}
